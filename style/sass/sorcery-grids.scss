@charset "utf-8";
/*! Sorcery Grids 2.0.0-Î²12: A highly configurable, fun, responsive grid system!
 *  http://github.com/mikehdt/sorcery-grids
 */

// Sorcery Grids is based on ideas and open-source code from the incredibly
// talented Harry Roberts at csswizardry.com - thank you! Sorcery was mixed and
// messed about with magic and science by Mike Hopkins at dthought.net
//
// Take it, modify it, make it your own. Have fun with it!

// Breakpoints
// -----------
// Here is how to set the various breakpoints which will be generated.
// Note that the default base breakpoints are available at all sizes.
//
// The default item is required and is the minimum item needed. Additional
// breakpoint names can follow, separated by a comma. Each breakpoint's config
// is a map of values contained within round brackets.
//
// Inside each breakpoint item, the minimum item required is grids. All other
// items are entirely optional. The grids item should contain a bracketed list
// of all grids you want. Whole numbers such as 4 will generate all quarter
// grid items. Strings representing a ratio such as "1-4" or "1/4" will only
// generate that one specific ratio.
//
// Extra items are:
//
// gutter-width: unit - Default guttering for this breakpoint. Use rem or px
// gutter-extras: (clear/equal/offset) - Generate either clearing, equal or offset gutter classes
// gutter-extra-width: unit - Gutter widths for extra variations (equal, offset)
// gutter-variations: true|false - Generate wide and narrow guttering options
//
// align-horizontal: (left/center/right) - Generate text-alignment classes
// align-vertical: (top/middle/bottom) - Generate vertical-align classes
//
// offset-types: (push/pull/in/out) - Generate classes used to swap and offset columns
// offset-ratios: (units) The ratios to generate for all push/pull/in/out offset types
//
// reversible: Generate a reversible modifier, useful for maintaining HTML source order
//
// An example of the options as set:
//	default: (
//		grids: (1, 2),

//		gutter-width:       0,
//		gutter-extras:      (),
//		gutter-extra-width: 0,
//		gutter-varations:   false,

//		align-horizontal: (),
//		align-vertical:   (),

//		offset-types:  (),
//		offset-ratios: (),

//		reversible: false
//	)

$sorcery-grids: (
	default: (
		grids: (1, 2, 4, 5, 6, 8),

		gutter-width:       0,
		gutter-extras:      (),
		gutter-extra-width: 1rem,
		gutter-varations:   false,

		align-horizontal: (),
		align-vertical:   (),

		offset-types:  (),
		offset-ratios: (),

		reversible: false
	),

	s: (
		media: "(min-width: 20em)",
		grids: ("1-2"),
	),

	m: (
		media: "(min-width: 50em)",
		grids: (2, 4)
	),

	l: (
		media: "(min-width: 90em)",
		grids: (2, 4, 8)
	)
)!default;


// General Configuration
// ---------------------
// These are the general options which control how and what the system will
// generate. You should not need to edit anything beyond this section.

// --- Core Setup ---
// 1. Logic to use - "inline" (inline-block), or "float"
// 2. Whether to generate responsive (media query) breakpoints or not
// 3. Static classes are your standard classes available all the time
// 4. Silent classes are intended to be used selectively with @extend
$grid-logic:         inline!default;   // [1]
$grid-responsive:    true!default;     // [2]
$use-static-classes: true!default;     // [3]
$use-silent-classes: false!default;    // [4]

// --- Grid Names ---
// 1. The prefix to be used for the outer grid container
// 2. The prefix to be used for inner grid items
// 3. The prefix for ratio classes, ignored if $use-namespace-ratios is false
$name-grid:        grid!default;       // [1]
$name-grid-item:   grid__item!default; // [2]
$name-grid-ratios: grid!default;       // [3]

// --- Naming Styles ---
// 1. Set to true to use numbers for ratios, false for words up to sixteenths
// 2. Use the namespace, only use if $use-ratio-numbers is also false
// 3. Whether to put the media query breakpoint name as a prefix or a suffix
// 4. Ignore duplicates for each percentage e.g., if true 1/2 will skip 2/4
$use-ratio-numbers:    true!default;   // [1]
$use-namespace-ratios: true!default;   // [2]
$breakpoint-position:  suffix!default; // [3]
$ignore-duplicates:    false!default;   // [4]

// --- Gutters ---
// 1. I dunno
// 2. A width
$gutter-width: 1rem!default;   // [1]
$gutter-style: offset!default; // [2]

// --- Hacks (avoid using if possible) ---
// 1. Use an imprecision hack for Android < 4.4 when using inline-block logic
$use-imprecision-hack: false!default; // [1]










// =============================================== //
// =============== HERE BE DRAGONS =============== //
// =============================================== //

@import "sorcery-grids/core-init";