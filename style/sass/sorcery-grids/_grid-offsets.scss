// MIXIN grid-offsets
//
// Bootstrapper for generating offset classes. Relies on the same logic as
// grids, and passes down the offset type through the new-grid structure. At
// the end of the grid run, it's interpreted and the correct CSS rules applied.
//
// FEAT: $use-namespace-offsets ... need to consider reimplementing this...
// Something like // $use-namespace-offsets: true!default;
//
@mixin grid-offsets ($offset-types, $offset-ratios, $class-breakpoint) {
	@each $offset-type in $offset-types {
		/* --- Offset: #{$offset-type} --- */
		@if $use-static-classes and $use-silent-classes == false {
			// This may preclude some media-query-only situations from
			// occurring... hm.
			@if not index($_gen-offset, $offset-type) {
				// Not the best selector, but avoids position: relative; on
				// every element when static classes are in use
				[class*="#{$offset-type}--"] {
					position: relative;
				}

				$_gen-offset: join($_gen-offset, $offset-type) !global;
			}
		}

		@include new-grid($offset-ratios, $class-breakpoint, $offset-type +"--");
	}
}