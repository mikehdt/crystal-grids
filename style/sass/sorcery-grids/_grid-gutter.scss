// MIXIN grid-gutter
//
// Generate gutters adjusted and versions with modifiers as well if enabled.
//
@mixin grid-gutter ($extra-gutter-types, $extra-gutter-width:$gutter-width, $extra-gutter-widths:false, $class-breakpoint:"") {
	$prefix: "";
	$suffix: "";

	@if $breakpoint-position == "prefix" {
		$prefix: $class-breakpoint;
	}
	@else if $breakpoint-position == "suffix" {
		$suffix: $class-breakpoint;
	}

	@each $type in $extra-gutter-types {
		#{class-gen($prefix +"gutter--"+ $type + $suffix)} {
			@include grid-gutter-item($extra-gutter-width, $type);
		}

		// Generate wide and narrow variations only if specified to do so
		@if $extra-gutter-widths and $type != "clear" {
			#{class-gen($prefix +"gutter--"+ $type +"--wide"+ $suffix)} {
				@include grid-gutter-item($extra-gutter-width * 2, $type);
			}

			#{class-gen($prefix +"gutter--"+ $type +"--narrow"+ $suffix)} {
				@include grid-gutter-item($extra-gutter-width / 2, $type);
			}
		}
	}
}


// MIXIN grid-gutter-item
//
// Generate gutters, either equal or offset.
//
@mixin grid-gutter-item ($width, $type) {
	@if $type == "equal" {
		margin-left:  -$width / 2;
		margin-right: -$width / 2;
	}
	@else if $type == "offset" {
		margin-left:  -$width;
		margin-right: 0;
	}
	@else if $type == "clear" or $type == "none" {
		margin-left:  0;
		margin-right: 0;
	}

	// Grids within grids
	#{class-gen($name-grid, "> ")} {
		@include logic-type("child");

		margin-left:  0;
		margin-right: 0;
	}

	// Child grid items
	#{class-gen($name-grid-item, "> ")} {
		@if $type == "equal" {
			padding-left:  $width / 2;
			padding-right: $width / 2;
		}
		@else if $type == "offset" {
			padding-left:  $width;
			padding-right: 0;
		}
		@else if $type == "clear" or $type == "none" {
			padding-left:  0;
			padding-right: 0;
		}
	}
}