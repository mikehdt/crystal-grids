// MIXIN new-grid-set
//
// Include breakpoint grid generation for a type
//
@mixin new-grid-set ($grids, $breakpoint-set, $breakpoint-name:null) {
	$class-breakpoint: "";

	@if $breakpoint-name {
		@if $breakpoint-position == prefix {
			$class-breakpoint: $breakpoint-name + "--";
		}
		@else if $breakpoint-position == suffix {
			$class-breakpoint: "--" + $breakpoint-name;
		}
		@else {
			@warn 'Breakpoint position can only be either `prefix` or `suffix`';
		}
	}

	// Fancy media query gutter modifier check
	@if $gutter-style != "none" and $breakpoint-name and map-get($breakpoint-set, "gutter-width") {
		// Media queries are fun
		#{class-gen($name-grid)} {
			$new-gutter-width: map-get($breakpoint-set, "gutter-width");

			@if not $new-gutter-width {
				// Reset to default if not specified
				$new-gutter-width: $gutter-width;
			}

			@include grid-gutter-item($new-gutter-width, $gutter-style);
		}
	}

	// Grid Divisions
	// --------------
	@include new-grid($grids, $class-breakpoint);

	// Grid System Modifiers
	// ---------------------
	// Reversible
	@if map-get($breakpoint-set, "reversible") {
		@include grid-reversible($class-breakpoint);
	}

	// Gutters
	@if map-get($breakpoint-set, "gutter-types") {
		$extra-gutter-types:  map-get($breakpoint-set, "gutter-types");
		$extra-gutter-widths: map-get($breakpoint-set, "gutter-variations");
		$extra-gutter-width:  null;

		@if map-get($breakpoint-set, "gutter-extra-width") {
			$extra-gutter-width: map-get($breakpoint-set, "gutter-extra-width");
		}
		@else if map-get($breakpoint-set, "gutter-width") {
			$extra-gutter-width: map-get($breakpoint-set, "gutter-width");
		}
		@else {
			// Reset to default if not specified
			$extra-gutter-width: $gutter-width;
		}

		@include grid-gutter($extra-gutter-types, $extra-gutter-width, $extra-gutter-widths, $class-breakpoint);
	}

	// Align Horizontal
	@if map-get($breakpoint-set, "align-horizontal") {
		$align-types: map-get($breakpoint-set, "align-horizontal");

		@include grid-align("horizontal", $align-types, $class-breakpoint);
	}

	// Align Vertical
	@if map-get($breakpoint-set, "align-vertical") {
		$align-types: map-get($breakpoint-set, "align-vertical");

		@include grid-align("vertical", $align-types, $class-breakpoint);
	}

	// Grid Offsets
	@if map-get($breakpoint-set, "offset-types") {
		$offset-types:  map-get($breakpoint-set, "offset-types" );
		$offset-ratios: map-get($breakpoint-set, "offset-ratios");

		@include grid-offsets($offset-types, $offset-ratios, $class-breakpoint);
	}

	// Individual grid offsets
	@if map-get($breakpoint-set, "offset-push") {
		$offset-ratios: map-get($breakpoint-set, "offset-push");

		@include grid-offset("push", $offset-ratios, $class-breakpoint);
	}

	@if map-get($breakpoint-set, "offset-pull") {
		$offset-ratios: map-get($breakpoint-set, "offset-pull");

		@include grid-offset("pull", $offset-ratios, $class-breakpoint);
	}

	@if map-get($breakpoint-set, "offset-in") {
		$offset-ratios: map-get($breakpoint-set, "offset-in");

		@include grid-offset("in", $offset-ratios, $class-breakpoint);
	}

	@if map-get($breakpoint-set, "offset-out") {
		$offset-ratios: map-get($breakpoint-set, "offset-out");

		@include grid-offset("out", $offset-ratios, $class-breakpoint);
	}
}