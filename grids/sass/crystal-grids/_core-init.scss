// Sanity checks
// -------------
@if length($crystal-grids) == 0 {
	@warn "No breakpoints have been configured. Grids cannot be generated.";
}

// Grid System Functions
// ---------------------
@import "functions-namespace";
@import "functions-ratio";

// Grid System Mixins
// ------------------
@import "core-new-grid-set";
@import "core-new-grid";

@import "grid-gutter";
@import "grid-reversible";

// Global Variables
// ----------------
$_cg_generated: () !global;

// Base grid container and item classing
// -------------------------------------
// There is a bug here in libsass where it wraps the first item with "" for some
// reason. I don't know why. Hence the unquote()
#{unquote(class-gen($name-grid))},
#{class-gen($name-grid-item)} {
	box-sizing: border-box;
	vertical-align: top;
}

// Generate grid items first
#{class-gen($name-grid-item)} {
	width: 100%;
	margin-left:  0;
	margin-right: 0;
}

// So that they can be overridden later...
#{class-gen($name-grid)} {
	display: flex;
	flex-wrap: wrap;

	$default-gutter: map-get(map-get($crystal-grids, "default"), "gutter-width");

	@if $default-gutter {
		// Use the set default
		@include grid-gutter-item($default-gutter, $gutter-type);
	}
	@else {
		// Use the global default
		@include grid-gutter-item($gutter-width, $gutter-type);
	}

	padding-left:  0;
	padding-right: 0;

	// This is part of the magic to get inline-blocks to behave
	// This remove the space between elements
	font-size: 0;

	// Grids within grids
	#{class-gen($name-grid, "> ")} {
		margin-left:  0;
		margin-right: 0;
	}
}

// Grid System Grids
// -----------------
@each $breakpoint-name, $breakpoint-set in $crystal-grids {
	$grids: map-get($breakpoint-set, "grids");

	/* === Grid: #{$breakpoint-name} === */
	@if $breakpoint-name == "default" {
		@include new-grid-set($grids, $breakpoint-set);
	}
	@else {
		$media-query: map-get($breakpoint-set, "media");

		@media #{$media-query} {
			@include new-grid-set($grids, $breakpoint-set, $breakpoint-name);
		}
	}
}